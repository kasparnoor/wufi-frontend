# Medusa Integration

The Wufi Storefront integrates with Medusa, an open-source headless commerce engine, using both Medusa's backend APIs and UI components in a unified component system.

## Commerce Integration
# Medusa Integration

The Kraps Storefront integrates with Medusa, an open-source headless commerce engine, using both Medusa's backend APIs and UI components in a unified component system.

## Commerce Integration
- Uses the Medusa JS SDK for all commerce operations
- Data fetching is primarily done via server components
- Product, cart, and checkout flows are built on Medusa APIs

## UI Component Integration
Medusa UI components are integrated into the unified component system:

### Medusa UI Components
**Available via**: `@lib/components/ui` (unified import) or `@medusajs/ui` (direct)
- `Container`, `Text`, `Heading`, `Table`, `Badge`, `IconBadge`, `clx`
- `MedusaButton` (aliased to avoid conflict with shadcn Button)

### Usage in Unified System
```tsx
import { 
  // Medusa UI components for data display
  Container, Text, Table,
  // shadcn components for forms  
  Button, Input, Form,
  // Custom Kraps components for branding
  KrapsButton, KrapsTooltip
} from "@lib/components/ui"
```

### Component Selection Strategy
- **Use Medusa UI** for data display, tables, containers, and e-commerce layouts
- **Use shadcn components** for forms, interactive elements, and new UI features
- **Use custom Kraps components** for brand-specific styling and unique functionality

## Commerce Modules
These modules handle specific commerce functionality:
- [src/modules/products](mdc:src/modules/products) - Product display and search
- [src/modules/cart](mdc:src/modules/cart) - Shopping cart management
- [src/modules/checkout](mdc:src/modules/checkout) - Checkout process
- [src/modules/account](mdc:src/modules/account) - User accounts and orders

## Data Flow
- Server components fetch data directly from Medusa API
- Client components use React Server Actions for mutations
- Cart state is managed with cookies and server-side storage

## Migration Notes
- Existing Medusa UI components continue to work seamlessly
- New components should prefer shadcn alternatives for better accessibility and modern patterns
- Gradual migration approach allows keeping working Medusa components while adopting better alternatives
